include:
  - https://salsa.debian.org/salsa-ci-team/pipeline/raw/master/salsa-ci.yml
  - https://salsa.debian.org/salsa-ci-team/pipeline/raw/master/pipeline-jobs.yml

variables:
  SALSA_CI_DISABLE_MISSING_BREAKS: 0
  SALSA_CI_DISABLE_RC_BUGS: 0

build:
  extends: .build-package
  before_script:
    - debian/add_extra_repository.sh -e ${EXTRA_REPOSITORY} -k ${EXTRA_REPOSITORY_KEY} -u

reprotest:
  extends: .test-reprotest-no-diffoscope
  before_script:
    - debian/add_extra_repository.sh -e ${EXTRA_REPOSITORY} -k ${EXTRA_REPOSITORY_KEY} -u

autopkgtest:
  extends: .test-autopkgtest
  script:
    - wget --progress=dot:giga ${SALSA_CI_AUTOPKGTEST_LXC}/-/jobs/artifacts/master/raw/artifacts/lxc.tar?job=${RELEASE} -O lxc.tar
    - mkdir ${SCI_LXC_PATH} && tar xf lxc.tar -C ${SCI_LXC_PATH}
    - sed -i "/lxc.rootfs.path/ s@dir:.*/lxc/@dir:${SCI_LXC_PATH}/@" ${SCI_LXC_PATH}/autopkgtest-${RELEASE}-amd64/config
    - |
        cat >/etc/lxc/lxc.conf <<EOT
        lxc.lxcpath=${SCI_LXC_PATH}
        EOT
    - debian/add_extra_repository.sh -e ${EXTRA_REPOSITORY} -k ${EXTRA_REPOSITORY_KEY} \
        -t "${SCI_LXC_PATH}/autopkgtest-${RELEASE}-amd64/rootfs/etc"
    - umount -R /sys/fs/cgroup && mount -a
    - /etc/init.d/lxc-net start
    - /etc/init.d/lxc start
    - debci localtest $CI_PROJECT_DIR/debian/output/*.changes --suite ${RELEASE} || ( ret=$?; [ $ret -eq 8 ] || [ $ret -eq 2 ] )
  variables:
    GIT_STRATEGY: fetch

piuparts:
  extends: .test-piuparts
  script:
    - CHROOT_PATH="/tmp/debian-chroot"
    - CONTAINER_ID=$(docker run --rm -d "${SALSA_CI_IMAGES_BASE}" sleep infinity)
    - docker exec ${CONTAINER_ID} bash -c "apt-get update && apt-get install eatmydata -y"
    - mkdir -p ${CHROOT_PATH}
    - docker export ${CONTAINER_ID} | tar -C ${CHROOT_PATH} -xf -
    - mknod -m 666 ${CHROOT_PATH}/dev/urandom c 1 9
    - mkdir -p /srv/local-apt-repository/ && cp -a ${WORKING_DIR}/*.deb /srv/local-apt-repository/ && /usr/lib/local-apt-repository/rebuild
    - mkdir -p ${CHROOT_PATH}/etc-target/apt/sources.list.d ${CHROOT_PATH}/etc-target/apt/preferences.d
    - cp -aTLv /etc/apt/sources.list.d  ${CHROOT_PATH}/etc-target/apt/sources.list.d
    - cp -aTLv /etc/apt/preferences.d  ${CHROOT_PATH}/etc-target/apt/preferences.d
    - debian/add_extra_repository.sh -e ${EXTRA_REPOSITORY} -k ${EXTRA_REPOSITORY_KEY} \
        -t "${CHROOT_PATH}/etc-target"
    - cp -aTLv /srv/local-apt-repository ${CHROOT_PATH}/srv/local-apt-repository
    - cp -aTLv /var/lib/local-apt-repository/ ${CHROOT_PATH}/var/lib/local-apt-repository/
    - sed  '/127.0.0.1/s/localhost/pipeline.salsa.debian.org localhost/' /etc/hosts > ${CHROOT_PATH}/etc/hosts
    - PIUPARTS_DISTRIBUTION_ARG="--distribution $RELEASE"
    - |
        if [ "$VENDOR" = "debian" ]; then \
            [ "$RELEASE" = unstable -o "$RELEASE" = experimental -o "$RELEASE" = testing ] || PIUPARTS_DISTRIBUTION_ARG="--distribution $RELEASE/updates"; \
            [ "${RELEASE/-backports/}" = "$RELEASE" ] || PIUPARTS_DISTRIBUTION_ARG="--distribution $RELEASE"; \
        fi
    - |
        for PACKAGE in $(ls ${WORKING_DIR}/*.deb); do
            piuparts --mirror "${SALSA_CI_MIRROR} ${SALSA_CI_COMPONENTS}" ${SALSA_CI_PIUPARTS_ARGS} --scriptsdir /etc/piuparts/scripts --allow-database --warn-on-leftovers-after-purge --hard-link -e ${CHROOT_PATH} ${PIUPARTS_DISTRIBUTION_ARG} ${PACKAGE}
        done
  variables:
    GIT_STRATEGY: fetch
